{"uid":"fb275f10370f7bb5","name":"canCreateMultipleContact(ContactData) [2] ContactData[id=, firstname=yskdrtdqpw, lastname=xlayibexut, address=null, photo=null, home=null, mobile=null, work=null, secondary=null, email=null, email2=null, email3=null]","fullName":"ru.stqa.addressbook.tests.Contact.ContactCreationTest.canCreateMultipleContact","historyId":"fc5f8216a82b5b71c2cbb3119741425d","time":{"start":1732691774549,"stop":1732691776540,"duration":1991},"description":"","status":"failed","statusMessage":"expected: <[ContactData[id=357, firstname=vehywoncna, lastname=hnvabvhcwj, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=358, firstname=nfexmjmgvg, lastname=kwkbecnvif, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=359, firstname=letsweiwsd, lastname=ahuyfxuflh, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=360, firstname=jeasuozeri, lastname=imvuqbigrf, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=361, firstname=ueezhdfroh, lastname=buiosgbbwc, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=362, firstname=mvmpkgyevc, lastname=tluipzkumv, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=363, firstname=yskdrtdqpw, lastname=xlayibexut, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=]]> but was: <[ContactData[id=357, firstname=vehywoncna, lastname=hnvabvhcwj, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=358, firstname=nfexmjmgvg, lastname=kwkbecnvif, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=359, firstname=letsweiwsd, lastname=ahuyfxuflh, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=360, firstname=jeasuozeri, lastname=imvuqbigrf, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=361, firstname=ueezhdfroh, lastname=buiosgbbwc, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=362, firstname=mvmpkgyevc, lastname=tluipzkumv, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=363, firstname=yskdrtdqpw, lastname=xlayibexut, address=null, photo=null, home=null, mobile=null, work=null, secondary=null, email=null, email2=null, email3=null]]>","statusTrace":"org.opentest4j.AssertionFailedError: expected: <[ContactData[id=357, firstname=vehywoncna, lastname=hnvabvhcwj, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=358, firstname=nfexmjmgvg, lastname=kwkbecnvif, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=359, firstname=letsweiwsd, lastname=ahuyfxuflh, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=360, firstname=jeasuozeri, lastname=imvuqbigrf, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=361, firstname=ueezhdfroh, lastname=buiosgbbwc, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=362, firstname=mvmpkgyevc, lastname=tluipzkumv, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=363, firstname=yskdrtdqpw, lastname=xlayibexut, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=]]> but was: <[ContactData[id=357, firstname=vehywoncna, lastname=hnvabvhcwj, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=358, firstname=nfexmjmgvg, lastname=kwkbecnvif, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=359, firstname=letsweiwsd, lastname=ahuyfxuflh, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=360, firstname=jeasuozeri, lastname=imvuqbigrf, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=361, firstname=ueezhdfroh, lastname=buiosgbbwc, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=362, firstname=mvmpkgyevc, lastname=tluipzkumv, address=, photo=, home=, mobile=, work=, secondary=, email=, email2=, email3=], ContactData[id=363, firstname=yskdrtdqpw, lastname=xlayibexut, address=null, photo=null, home=null, mobile=null, work=null, secondary=null, email=null, email2=null, email3=null]]>\r\n\tat org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)\r\n\tat org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)\r\n\tat org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)\r\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\r\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\r\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)\r\n\tat ru.stqa.addressbook.tests.Contact.ContactCreationTest.canCreateMultipleContact(ContactCreationTest.java:89)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\r\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:ru.stqa.addressbook.tests.Contact.ContactCreationTest]/[test-template:canCreateMultipleContact(ru.stqa.addressbook.model.ContactData)]/[test-template-invocation:#2]"},{"name":"host","value":"5CD9355XRC"},{"name":"thread","value":"33544@5CD9355XRC.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"ru.stqa.addressbook.tests.Contact.ContactCreationTest"},{"name":"testClass","value":"ru.stqa.addressbook.tests.Contact.ContactCreationTest"},{"name":"testMethod","value":"canCreateMultipleContact"},{"name":"suite","value":"ru.stqa.addressbook.tests.Contact.ContactCreationTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"fb275f10370f7bb5.json","parameterValues":[]}